// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table TopologyNodes {
  id integer [primary key]
  name string
  type NetworkElementType
}

Table Proxy {
  id integer [primary key]
  ingress integer
  egress integer
}
Ref: TopologyNodes.id - Proxy.id
Ref: TopologyNodes.id - Proxy.ingress
Ref: TopologyNodes.id - Proxy.egress

Table F5{
  id integer [primary key]
  ingress integer [primary key]
}
Ref: F5.id - TopologyNodes.id
Ref: F5.ingress - TopologyNodes.id

Table F5Egress {
  id integer [primary key]
  egress integer [primary key]
}
Ref: F5Egress.id > F5.id
Ref: F5Egress.egress > TopologyNodes.id

Table Nginx {
  id integer [primary key]
  ingress integer [primary key] // FK of the ingress node
}
Ref: TopologyNodes.id - Nginx.id
Ref: TopologyNodes.id - Nginx.ingress

Table NginxEgress{
  id integer [primary key]
  egress integer [primary key] // FK egress node
}
Ref: Nginx.id < NginxEgress.id
Ref: NginxEgress.egress - TopologyNodes.id

Table ApplicationDefinitions {
  id integer [primary key]
  name string
  port integer
  type applicationType
}

Table ApplicationInstances {
  id integer [primary key]
  server integer
  definition integer
}
Ref: ApplicationInstances.definition > ApplicationDefinitions.id
Ref: ApplicationInstances.id - TopologyNodes.id

Table Servers{
  id integer [primary key]
  alias string
  hostname string
}

Ref: ApplicationInstances.server > Servers.id

Table Healthchecks {
  id integer [primary key]
  application integer
  url string
  timeout time
  interval time
  expectedstatus int
}

Ref: Healthchecks.application - ApplicationDefinitions.id